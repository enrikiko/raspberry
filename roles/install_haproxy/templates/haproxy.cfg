global
    	log /dev/log	local0
    	log /dev/log	local1 notice
    	chroot /var/lib/haproxy
    	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    	stats timeout 30s
    	user haproxy
    	group haproxy
    	daemon

    	# Default SSL material locations
    	ca-base /etc/ssl/certs
    	crt-base /etc/ssl/private

    	# Default ciphers to use on SSL-enabled listening sockets.
    	# For more information, see ciphers(1SSL). This list is from:
    	#  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
    	# An alternative list with additional directives can be obtained from
    	#  https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy
    	ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
    	ssl-default-bind-options no-sslv3

defaults
    	log	global
    	mode	http
    	option	httplog
    	option	dontlognull
      timeout connect 5000
      timeout client  50000
    	timeout server  50000
    	errorfile 400 /etc/haproxy/errors/400.http
    	errorfile 403 /etc/haproxy/errors/403.http
    	errorfile 408 /etc/haproxy/errors/408.http
    	errorfile 500 /etc/haproxy/errors/500.http
    	errorfile 502 /etc/haproxy/errors/502.http
    	errorfile 503 /etc/haproxy/errors/503.http
    	errorfile 504 /etc/haproxy/errors/504.http

frontend Local_Server
    	bind :80
    	mode http

      acl VHOST_public req.hdr(Host) -i -m dom public.cortijodemazas.com
	    acl VHOST_public req.hdr(Host) -i -m dom www.cortijodemazas.com
    	acl VHOST_app req.hdr(Host) -i -m dom app.cortijodemazas.com

    	#acl PATH_front path_beg -i /front
    	#acl PATH_back path_beg -i /back
  	  acl PATH_cortijo path_beg -i /favicon.ico


    	#use_backend be_front if VHOST_app PATH_front
    	use_backend app_cortijo if VHOST_app PATH_cortijo
    	use_backend web_server if VHOST_app
	    #use_backend be_app if VHOST_app
	    use_backend web_public if VHOST_public

	    default_backend web_server

backend web_server
     	mode http
    	balance roundrobin
    	option forwardfor
    	#http-request set-header X-Forwarded-Port %[dst_port]
    	#http-request add-header X-Forwarded-Proto https if { ssl_fc }
    	#option httpchk HEAD / HTTP/1.1rnHost:localhost
      http-request set-header Host localhost
      server front 192.168.1.50:8300 check

backend web_public
  	 mode http
  	 balance roundrobin
  	 option forwardfor
  	 server public_1 192.168.1.50:8301 check
  	 server public_2 192.168.1.50:8302 check

backend be_app
     mode http
     server app.cortijodemazas.com 192.168.1.53:8600 check

backend app_cortijo
     mode http
     server app.cortijodemazas.com 192.168.1.50:8000 check

backend be_back
     mode http
     server app.cortijodemazas.com 192.168.1.53:9000 check
